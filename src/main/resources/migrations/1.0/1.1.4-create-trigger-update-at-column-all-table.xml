<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd">

    <changeSet id="createFunctionForTrigger" author="talibaliyev">
        <createProcedure>
            CREATE OR REPLACE FUNCTION update_updated_at_column()
        RETURNS TRIGGER AS
        $$
            BEGIN
            NEW.updated_at = NOW();
            RETURN NEW;
            END;
        $$ LANGUAGE plpgsql;
        </createProcedure>
    </changeSet>

    <changeSet id="createTriggersForAllTable" author="">
        <sql>
            CREATE TRIGGER update_books_updated_at
                BEFORE UPDATE
                ON books
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_authors_updated_at
                BEFORE UPDATE
                ON authors
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_events_updated_at
                BEFORE UPDATE
                ON events
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_notifications_updated_at
                BEFORE UPDATE
                ON notifications
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_publishers_updated_at
                BEFORE UPDATE
                ON publishers
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_quantity_updated_at
                BEFORE UPDATE
                ON quantity
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_ratings_and_reviews_updated_at
                BEFORE UPDATE
                ON ratings_and_reviews
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_reminders_updated_at
                BEFORE UPDATE
                ON reminders
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_rentals_updated_at
                BEFORE UPDATE
                ON rentals
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_reservations_updated_at
                BEFORE UPDATE
                ON reservations
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_roles_updated_at
                BEFORE UPDATE
                ON roles
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_user_role_updated_at
                BEFORE UPDATE
                ON user_role
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
        <sql>
            CREATE TRIGGER update_users_updated_at
                BEFORE UPDATE
                ON users
                FOR EACH ROW
                EXECUTE FUNCTION update_updated_at_column();
        </sql>
    </changeSet>

</databaseChangeLog>